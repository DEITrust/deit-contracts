/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "DEIT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DEIT__factory>;
    getContractFactory(
      name: "DEITBroker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DEITBroker__factory>;
    getContractFactory(
      name: "Diamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Diamond__factory>;
    getContractFactory(
      name: "BrokerAdminFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BrokerAdminFacet__factory>;
    getContractFactory(
      name: "BrokerPublicFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BrokerPublicFacet__factory>;
    getContractFactory(
      name: "BrokerWithdrawalFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BrokerWithdrawalFacet__factory>;
    getContractFactory(
      name: "DiamondCutFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCutFacet__factory>;
    getContractFactory(
      name: "DiamondLoupeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupeFacet__factory>;
    getContractFactory(
      name: "ERC20AllowanceFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20AllowanceFacet__factory>;
    getContractFactory(
      name: "ERC20Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Base__factory>;
    getContractFactory(
      name: "ERC20BrokeredFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20BrokeredFacet__factory>;
    getContractFactory(
      name: "ERC20BurnableFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20BurnableFacet__factory>;
    getContractFactory(
      name: "ERC20Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Facet__factory>;
    getContractFactory(
      name: "OwnershipFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnershipFacet__factory>;
    getContractFactory(
      name: "IBrokerAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBrokerAdmin__factory>;
    getContractFactory(
      name: "IBrokerPublic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBrokerPublic__factory>;
    getContractFactory(
      name: "IBrokerWithdrawal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBrokerWithdrawal__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Allowance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Allowance__factory>;
    getContractFactory(
      name: "IERC20Brokered",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Brokered__factory>;
    getContractFactory(
      name: "IERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Supplies",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Supplies__factory>;
    getContractFactory(
      name: "IERC20Transfer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Transfer__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "LibDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibDiamond__factory>;
    getContractFactory(
      name: "DiamondInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondInit__factory>;

    getContractAt(
      name: "DEIT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DEIT>;
    getContractAt(
      name: "DEITBroker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DEITBroker>;
    getContractAt(
      name: "Diamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Diamond>;
    getContractAt(
      name: "BrokerAdminFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BrokerAdminFacet>;
    getContractAt(
      name: "BrokerPublicFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BrokerPublicFacet>;
    getContractAt(
      name: "BrokerWithdrawalFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BrokerWithdrawalFacet>;
    getContractAt(
      name: "DiamondCutFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondCutFacet>;
    getContractAt(
      name: "DiamondLoupeFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondLoupeFacet>;
    getContractAt(
      name: "ERC20AllowanceFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20AllowanceFacet>;
    getContractAt(
      name: "ERC20Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Base>;
    getContractAt(
      name: "ERC20BrokeredFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20BrokeredFacet>;
    getContractAt(
      name: "ERC20BurnableFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20BurnableFacet>;
    getContractAt(
      name: "ERC20Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Facet>;
    getContractAt(
      name: "OwnershipFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnershipFacet>;
    getContractAt(
      name: "IBrokerAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBrokerAdmin>;
    getContractAt(
      name: "IBrokerPublic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBrokerPublic>;
    getContractAt(
      name: "IBrokerWithdrawal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBrokerWithdrawal>;
    getContractAt(
      name: "IDiamondCut",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC173",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Allowance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Allowance>;
    getContractAt(
      name: "IERC20Brokered",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Brokered>;
    getContractAt(
      name: "IERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Burnable>;
    getContractAt(
      name: "IERC20Supplies",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Supplies>;
    getContractAt(
      name: "IERC20Transfer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Transfer>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "LibDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibDiamond>;
    getContractAt(
      name: "DiamondInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondInit>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
