/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC20BrokeredFacet,
  ERC20BrokeredFacetInterface,
} from "../../facets/ERC20BrokeredFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldMinter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "origin",
        type: "address",
      },
    ],
    name: "NewBroker",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter_",
        type: "address",
      },
    ],
    name: "erc20BrokeredInit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMinter_",
        type: "address",
      },
    ],
    name: "minter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a36806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806307546172146100515780633dd08c381461006f57806340c10f191461009f578063d662b653146100cf575b600080fd5b6100596100ff565b604051610066919061061b565b60405180910390f35b61008960048036038101906100849190610667565b61010e565b60405161009691906106af565b60405180910390f35b6100b960048036038101906100b49190610700565b61020d565b6040516100c691906106af565b60405180910390f35b6100e960048036038101906100e49190610667565b61030b565b6040516100f691906106af565b60405180910390f35b6000610109610325565b905090565b6000610118610358565b60006101226103f3565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050826101516103f3565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fb75a3230ee9179090b1c2741fe4f4f76ebd3d95ac0ec82959686c881a7d43cc660405160405180910390a46001915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661022e610325565b73ffffffffffffffffffffffffffffffffffffffff1603610284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027b906107c3565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166102a3610325565b73ffffffffffffffffffffffffffffffffffffffff16146102f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f090610855565b60405180910390fd5b6103038383610420565b905092915050565b6000610315610358565b61031e8261010e565b9050919050565b600061032f6103f3565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610360610580565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e8906108e7565b60405180910390fd5b565b6000807f764b4a6ca79cad1227158163a97be56839dc78dfd491b37a868031e1e0803b8690508091505090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048790610953565b60405180910390fd5b600061049a6105ad565b9050828160030160008282546104b091906109a2565b92505081905550828160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461050891906109a2565b925050819055508373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161056d91906109e5565b60405180910390a3600191505092915050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6000807fd625622b8b695b0700ebaee84f5619cbdf87b4e616110b3186a34ca682144b1590508091505090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610605826105da565b9050919050565b610615816105fa565b82525050565b6000602082019050610630600083018461060c565b92915050565b600080fd5b610644816105fa565b811461064f57600080fd5b50565b6000813590506106618161063b565b92915050565b60006020828403121561067d5761067c610636565b5b600061068b84828501610652565b91505092915050565b60008115159050919050565b6106a981610694565b82525050565b60006020820190506106c460008301846106a0565b92915050565b6000819050919050565b6106dd816106ca565b81146106e857600080fd5b50565b6000813590506106fa816106d4565b92915050565b6000806040838503121561071757610716610636565b5b600061072585828601610652565b9250506020610736858286016106eb565b9150509250929050565b600082825260208201905092915050565b7f4d696e746572206973206e6f74207365742e20546f6b656e206d696e74696e6760008201527f2063757272656e746c79206c6f636b65642e0000000000000000000000000000602082015250565b60006107ad603283610740565b91506107b882610751565b604082019050919050565b600060208201905081810360008301526107dc816107a0565b9050919050565b7f4f6e6c79207468652064656c6567617465642062726f6b65722063616e206d6960008201527f6e74207468697320746f6b656e2e000000000000000000000000000000000000602082015250565b600061083f602e83610740565b915061084a826107e3565b604082019050919050565b6000602082019050818103600083015261086e81610832565b9050919050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b60006108d1602283610740565b91506108dc82610875565b604082019050919050565b60006020820190508181036000830152610900816108c4565b9050919050565b7f45524332303a2063616e2774206d696e7420746f203020616464726573730000600082015250565b600061093d601e83610740565b915061094882610907565b602082019050919050565b6000602082019050818103600083015261096c81610930565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ad826106ca565b91506109b8836106ca565b92508282019050808211156109d0576109cf610973565b5b92915050565b6109df816106ca565b82525050565b60006020820190506109fa60008301846109d6565b9291505056fea2646970667358221220ace98c68f708fcedc586d12076a04bcb4f0e05a272ad67b8ab7ff0276608ec3264736f6c63430008100033";

type ERC20BrokeredFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20BrokeredFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20BrokeredFacet__factory extends ContractFactory {
  constructor(...args: ERC20BrokeredFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20BrokeredFacet> {
    return super.deploy(overrides || {}) as Promise<ERC20BrokeredFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20BrokeredFacet {
    return super.attach(address) as ERC20BrokeredFacet;
  }
  override connect(signer: Signer): ERC20BrokeredFacet__factory {
    return super.connect(signer) as ERC20BrokeredFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20BrokeredFacetInterface {
    return new utils.Interface(_abi) as ERC20BrokeredFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20BrokeredFacet {
    return new Contract(address, _abi, signerOrProvider) as ERC20BrokeredFacet;
  }
}
