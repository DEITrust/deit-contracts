/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BrokerAdminFacet,
  BrokerAdminFacetInterface,
} from "../../facets/BrokerAdminFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "AssetPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "underBrokerage_",
        type: "bool",
      },
    ],
    name: "BrokeredAsset",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "denominator_",
        type: "uint256",
      },
    ],
    name: "brokerAdminInit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "denominator_",
        type: "uint256",
      },
    ],
    name: "token",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610aa0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c80629bbe1414610045578063c795ddd914610075578063fc0c546a146100a5575b600080fd5b61005f600480360381019061005a919061060f565b6100c3565b60405161006c9190610699565b60405180910390f35b61008f600480360381019061008a919061060f565b6100e1565b60405161009c9190610699565b60405180910390f35b6100ad6100ff565b6040516100ba91906106c3565b60405180910390f35b60006100cd610132565b6100d88484846101cd565b90509392505050565b60006100eb610132565b6100f68484846101cd565b90509392505050565b60006101096103c7565b60010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61013a6103f4565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c290610761565b60405180910390fd5b565b60006101d7610132565b60006101e16103c7565b60010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050836102106103c7565b60010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508461025a6103c7565b60000190816102699190610998565b50826102736103c7565b60020181905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156102e357508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1561033057600015158173ffffffffffffffffffffffffffffffffffffffff167fed2efe043cb7c6319bfe1a08b6c3661f0687e17dbdf465d9a90ba47ce3f0c8f760405160405180910390a35b600115158473ffffffffffffffffffffffffffffffffffffffff167fed2efe043cb7c6319bfe1a08b6c3661f0687e17dbdf465d9a90ba47ce3f0c8f760405160405180910390a3828473ffffffffffffffffffffffffffffffffffffffff167f56ef027b833b60516458319fcbe2e2130c66864061c474c1d70c84e5882106e360405160405180910390a360019150509392505050565b6000807f24b0e1f5977fca2c09daf3a5a3da902abb74fecaf1a06fb9303e8c5419cf523290508091505090565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104888261043f565b810181811067ffffffffffffffff821117156104a7576104a6610450565b5b80604052505050565b60006104ba610421565b90506104c6828261047f565b919050565b600067ffffffffffffffff8211156104e6576104e5610450565b5b6104ef8261043f565b9050602081019050919050565b82818337600083830152505050565b600061051e610519846104cb565b6104b0565b90508281526020810184848401111561053a5761053961043a565b5b6105458482856104fc565b509392505050565b600082601f83011261056257610561610435565b5b813561057284826020860161050b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105a68261057b565b9050919050565b6105b68161059b565b81146105c157600080fd5b50565b6000813590506105d3816105ad565b92915050565b6000819050919050565b6105ec816105d9565b81146105f757600080fd5b50565b600081359050610609816105e3565b92915050565b6000806000606084860312156106285761062761042b565b5b600084013567ffffffffffffffff81111561064657610645610430565b5b6106528682870161054d565b9350506020610663868287016105c4565b9250506040610674868287016105fa565b9150509250925092565b60008115159050919050565b6106938161067e565b82525050565b60006020820190506106ae600083018461068a565b92915050565b6106bd8161059b565b82525050565b60006020820190506106d860008301846106b4565b92915050565b600082825260208201905092915050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b600061074b6022836106de565b9150610756826106ef565b604082019050919050565b6000602082019050818103600083015261077a8161073e565b9050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107d357607f821691505b6020821081036107e6576107e561078c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261084e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610811565b6108588683610811565b95508019841693508086168417925050509392505050565b6000819050919050565b600061089561089061088b846105d9565b610870565b6105d9565b9050919050565b6000819050919050565b6108af8361087a565b6108c36108bb8261089c565b84845461081e565b825550505050565b600090565b6108d86108cb565b6108e38184846108a6565b505050565b5b81811015610907576108fc6000826108d0565b6001810190506108e9565b5050565b601f82111561094c5761091d816107ec565b61092684610801565b81016020851015610935578190505b61094961094185610801565b8301826108e8565b50505b505050565b600082821c905092915050565b600061096f60001984600802610951565b1980831691505092915050565b6000610988838361095e565b9150826002028217905092915050565b6109a182610781565b67ffffffffffffffff8111156109ba576109b9610450565b5b6109c482546107bb565b6109cf82828561090b565b600060209050601f831160018114610a0257600084156109f0578287015190505b6109fa858261097c565b865550610a62565b601f198416610a10866107ec565b60005b82811015610a3857848901518255600182019150602085019450602081019050610a13565b86831015610a555784890151610a51601f89168261095e565b8355505b6001600288020188555050505b50505050505056fea26469706673582212203fc1cde9c8d6848a3a00e59f9f63c3453b7ecb1ea0cb14037f90ffa8ce532ebe64736f6c63430008100033";

type BrokerAdminFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BrokerAdminFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BrokerAdminFacet__factory extends ContractFactory {
  constructor(...args: BrokerAdminFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BrokerAdminFacet> {
    return super.deploy(overrides || {}) as Promise<BrokerAdminFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BrokerAdminFacet {
    return super.attach(address) as BrokerAdminFacet;
  }
  override connect(signer: Signer): BrokerAdminFacet__factory {
    return super.connect(signer) as BrokerAdminFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BrokerAdminFacetInterface {
    return new utils.Interface(_abi) as BrokerAdminFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BrokerAdminFacet {
    return new Contract(address, _abi, signerOrProvider) as BrokerAdminFacet;
  }
}
