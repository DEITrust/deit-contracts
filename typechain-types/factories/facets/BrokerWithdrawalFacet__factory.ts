/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BrokerWithdrawalFacet,
  BrokerWithdrawalFacetInterface,
} from "../../facets/BrokerWithdrawalFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "asset_",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "limitRemaining_",
        type: "uint256",
      },
    ],
    name: "Withdrew",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethLimit_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "assetLimit_",
        type: "uint256",
      },
    ],
    name: "brokerWithdrawInit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethLimit_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "assetLimit_",
        type: "uint256",
      },
    ],
    name: "limit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "limit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "asset_",
        type: "bool",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610de7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631916d1f51461005c5780633c3c475e1461008c578063a4d66daf146100bc578063a9625e55146100db578063ead5d3591461010b575b600080fd5b610076600480360381019061007191906107a3565b61013b565b60405161008391906107fe565b60405180910390f35b6100a660048036038101906100a191906107a3565b61016f565b6040516100b391906107fe565b60405180910390f35b6100c461018b565b6040516100d2929190610828565b60405180910390f35b6100f560048036038101906100f091906108af565b6101ae565b60405161010291906107fe565b60405180910390f35b61012560048036038101906101209190610908565b610202565b60405161013291906107fe565b60405180910390f35b6000610145610432565b8261014e6104cd565b600001819055508161015e6104cd565b600101819055506001905092915050565b6000610179610432565b610183838361013b565b905092915050565b6000806101966104cd565b600001546101a26104cd565b60010154915091509091565b60006101b8610432565b60006101f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f0906109de565b60405180910390fd5b60019050919050565b600061020c610432565b60008054906101000a900460ff161561022457600080fd5b60016000806101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036102ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a490610a4a565b60405180910390fd5b60008083156103165760006102c06104cd565b60010154146102f0576102d16104cd565b600101546102dd6104fa565b600201546102eb9190610ac8565b6102f3565b60005b9050846102fe6104cd565b6003015461030c9190610af9565b8110159150610372565b60006103206104cd565b6000015414610350576103316104cd565b6000015461033d6104fa565b6003015461034b9190610ac8565b610353565b60005b90508461035e6104cd565b6002015461036c9190610af9565b81101591505b816103b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a990610b9f565b60405180910390fd5b84816103be9190610bbf565b90506103cc86868684610527565b61040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040290610c3f565b60405180910390fd5b60019250505060008060006101000a81548160ff0219169083151502179055509392505050565b61043a61070e565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c290610cd1565b60405180910390fd5b565b6000807f0c84eeb7c722f69642e0fb29eedd8c0f98cfd2a385883126c429004591ca068290508091505090565b6000807fe81aed516d085c209edd69067e2f32248087ae8ed4f342af0078c6780df30d8e90508091505090565b6000610531610432565b6000831561064257600061054361073b565b60010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050856105726104cd565b60030160008282546105849190610af9565b9250508190555083868615157fc1a58bfb3bc19e94a1464b24e1ec62f3c8b7ed47262c3a4770f7fa754358811e60405160405180910390a48073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88886040518363ffffffff1660e01b81526004016105f7929190610d00565b6020604051808303816000875af1158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a9190610d3e565b915050610702565b8461064b6104cd565b600201600082825461065d9190610af9565b9250508190555082858515157fc1a58bfb3bc19e94a1464b24e1ec62f3c8b7ed47262c3a4770f7fa754358811e60405160405180910390a48573ffffffffffffffffffffffffffffffffffffffff16856040516106b990610d9c565b60006040518083038185875af1925050503d80600081146106f6576040519150601f19603f3d011682016040523d82523d6000602084013e6106fb565b606091505b5050809150505b80915050949350505050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6000807f24b0e1f5977fca2c09daf3a5a3da902abb74fecaf1a06fb9303e8c5419cf523290508091505090565b600080fd5b6000819050919050565b6107808161076d565b811461078b57600080fd5b50565b60008135905061079d81610777565b92915050565b600080604083850312156107ba576107b9610768565b5b60006107c88582860161078e565b92505060206107d98582860161078e565b9150509250929050565b60008115159050919050565b6107f8816107e3565b82525050565b600060208201905061081360008301846107ef565b92915050565b6108228161076d565b82525050565b600060408201905061083d6000830185610819565b61084a6020830184610819565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061087c82610851565b9050919050565b61088c81610871565b811461089757600080fd5b50565b6000813590506108a981610883565b92915050565b6000602082840312156108c5576108c4610768565b5b60006108d38482850161089a565b91505092915050565b6108e5816107e3565b81146108f057600080fd5b50565b600081359050610902816108dc565b92915050565b60008060006060848603121561092157610920610768565b5b600061092f8682870161089a565b93505060206109408682870161078e565b9250506040610951868287016108f3565b9150509250925092565b600082825260208201905092915050565b7f4e6f7420696d706c656d656e746564207965742e2041737365747320706f6f6c60008201527f206865726520756e74696c204c5020737570706f72742061646465642e000000602082015250565b60006109c8603d8361095b565b91506109d38261096c565b604082019050919050565b600060208201905081810360008301526109f7816109bb565b9050919050565b7f43616e6e6f7420776974686472617720746f2074686520302061646472657373600082015250565b6000610a3460208361095b565b9150610a3f826109fe565b602082019050919050565b60006020820190508181036000830152610a6381610a27565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ad38261076d565b9150610ade8361076d565b925082610aee57610aed610a6a565b5b828204905092915050565b6000610b048261076d565b9150610b0f8361076d565b9250828201905080821115610b2757610b26610a99565b5b92915050565b7f416d6f756e74206973206f757473696465206f66207065726d6974746564206c60008201527f696d6974732e0000000000000000000000000000000000000000000000000000602082015250565b6000610b8960268361095b565b9150610b9482610b2d565b604082019050919050565b60006020820190508181036000830152610bb881610b7c565b9050919050565b6000610bca8261076d565b9150610bd58361076d565b9250828203905081811115610bed57610bec610a99565b5b92915050565b7f4572726f72207769746864726177696e67000000000000000000000000000000600082015250565b6000610c2960118361095b565b9150610c3482610bf3565b602082019050919050565b60006020820190508181036000830152610c5881610c1c565b9050919050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000610cbb60228361095b565b9150610cc682610c5f565b604082019050919050565b60006020820190508181036000830152610cea81610cae565b9050919050565b610cfa81610871565b82525050565b6000604082019050610d156000830185610cf1565b610d226020830184610819565b9392505050565b600081519050610d38816108dc565b92915050565b600060208284031215610d5457610d53610768565b5b6000610d6284828501610d29565b91505092915050565b600081905092915050565b50565b6000610d86600083610d6b565b9150610d9182610d76565b600082019050919050565b6000610da782610d79565b915081905091905056fea2646970667358221220e9462b9927cf1b0d14b6d564b71c489bee941a16c9d434f7744e6cd1a9db1fa164736f6c63430008100033";

type BrokerWithdrawalFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BrokerWithdrawalFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BrokerWithdrawalFacet__factory extends ContractFactory {
  constructor(...args: BrokerWithdrawalFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BrokerWithdrawalFacet> {
    return super.deploy(overrides || {}) as Promise<BrokerWithdrawalFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BrokerWithdrawalFacet {
    return super.attach(address) as BrokerWithdrawalFacet;
  }
  override connect(signer: Signer): BrokerWithdrawalFacet__factory {
    return super.connect(signer) as BrokerWithdrawalFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BrokerWithdrawalFacetInterface {
    return new utils.Interface(_abi) as BrokerWithdrawalFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BrokerWithdrawalFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BrokerWithdrawalFacet;
  }
}
